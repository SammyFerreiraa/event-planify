generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  phone         String?
  address       String?
  city          String?
  state         String?
  country       String?
  accounts      Account[]
  sessions      Session[]
  MyEvents      Event[]
  events        Attendee[]
  comments      Comment[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Event {
  id          String     @id @default(cuid())
  name        String
  description String?
  location    String?
  date        DateTime
  maxCapacity Int
  duration    Int
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  status      String    @default("basic")
  attendees   Attendee[]
  comments    Comment[]
}

model Attendee {
  id      String @id @default(cuid())
  eventId String
  userId  String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([eventId, userId])
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  eventId   String
  rating    Int
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([eventId, userId, content])
}
